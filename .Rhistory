wijn <- read.csv("wijn.csv", header=TRUE, sep = ",")
wijn <- read.csv("wine.csv", header=TRUE, sep = ",")
wijn <- read.csv("wijn.csv", header=TRUE, sep = ",")
getwd()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd(../lukas-vinoelst.be)
setwd("../lukas-vinoelst.be")
getwd()
setwd("../lukas-vinoelst.be")
setwd("C:/Users/loikas/Desktop/SMDAPracticum/lukas-vinoelst.be")
wijn <- read.csv("wijn.csv", header=TRUE, sep = ",")
View(wijn)
wijn <- read.csv("wijn.csv", header=FALSE, sep = ",")
View(wijn)
#Data Inladen
wijn <- read.csv("wijn.csv", header=FALSE, sep = ",")
summary(wijn)
wijn <- read.csv("wijn.csv", header=FALSE, sep = ",")
summary(wijn)
#Data schalen
wijnScaled = scale(wijn[,2:13])
#PCA maken
wijn.pca = prcomp(wijnScaled,scale=TRUE)
#geschaalde PCA maken
wijnScaled.pca = prcomp(wijnScaled,scale=TRUE)
install.packages("ade4")
##-------------------------------------------------------------------------
#!change working directory!
#Data Inladen
wijn <- read.csv("wijn.csv", header=FALSE, sep = ",")
summary(wijn)
#Data schalen
wijnScaled = scale(wijn[,2:13])
##-------------------------------------------------------------------------
#ongeschaalde PCA maken
wijn.pca = pprcomp(wijn[,2:13])
plot(wijn.pca)
unscaledRot = wijn.pca$rotation
#geschaalde PCA maken [wss best]
wijnScaled.pca = prcomp(wijnScaled,scale=TRUE)
plot(wijnScaled.pca)
scaledRot = wijnScaled.pca$rotation
scaledPred = predict(wijnScaled.pca)
#ongeschaalde PCA maken
wijn.pca = prcomp(wijn[,2:13])
##-------------------------------------------------------------------------
#!change working directory!
#Data Inladen
wijn <- read.csv("wijn.csv", header=FALSE, sep = ",")
summary(wijn)
#Data schalen
wijnScaled = scale(wijn[,2:13])
##-------------------------------------------------------------------------
#ongeschaalde PCA maken
wijn.pca = prcomp(wijn[,2:13])
plot(wijn.pca)
unscaledRot = wijn.pca$rotation
#geschaalde PCA maken [wss best]
wijnScaled.pca = prcomp(wijnScaled,scale=TRUE)
plot(wijnScaled.pca)
scaledRot = wijnScaled.pca$rotation
scaledPred = predict(wijnScaled.pca)
summary(wijnScaled.pca)
wijn.pca = prcomp(wijn[,2:13])
plot(wijn.pca)
summary(wijn.pca)
unscaledRot = wijn.pca$rotation
View(scaledPred)
View(scaledRot)
View(unscaledRot)
##-------------------------------------------------------------------------
#!change working directory!
#Data Inladen
wijn <- read.csv("wijn.csv", header=FALSE, sep = ",")
summary(wijn)
#Data schalen
wijnScaled = scale(wijn[,2:14])
#ongeschaalde PCA maken
wijn.pca = prcomp(wijn[,2:14])
plot(wijn.pca)
summary(wijn.pca)
unscaledRot = wijn.pca$rotation
#geschaalde PCA maken [wss best]
wijnScaled.pca = prcomp(wijnScaled,scale=TRUE)
plot(wijnScaled.pca)
summary(wijnScaled.pca)
scaledRot = wijnScaled.pca$rotation
scaledPred = predict(wijnScaled.pca)
View(scaledRot)
View(unscaledRot)
View(wijn)
View(scaledRot)
## PCA
library(MASS)
attach(crabs); help(crabs)
summary(crabs); head(crabs)
# Afmetingen: http://www.cma4ch.org/chemo/image/crab-carapace.png
## Manuele berekeningen
X = scale(crabs[,4:8])
crabs.eig = eigen(cor(X))
crabs.eig$values/sum(crabs.eig$values)
cumsum(crabs.eig$values/sum(crabs.eig$values))
plot(1:5,crabs.eig$values,main="Scree plot",xlab="Index",ylab="Variantie")
P = crabs.eig$vectors; P # Y = XP
Y1 = X%*%P; head(Y1)
## Eerste principaalcomponent correleert in dezelfde mate met alle veranderlijken:  dit is de "grootte" van de krab: kleinere PC1 (wegens mintekens) betekent grotere krab
## Tweede component kijkt naar het verschil tussen het achterlijf RW en de andere veranderlijken: hogere PC2 betekent breder achterlijf *in vergelijking met de rest van het lichaam*
## Derde component vergelijkt de grootte van het karkas met de dikte en de voorkant van het lijf (RW speelt geen rol van betekenis): hoe groter PC3, hoe dikker het lijf/breder de voorkant van de krab
## Ingebouwde commando's
crabs.pca = prcomp(X,scale=TRUE)
plot(crabs.pca)
summary(crabs.pca)
attributes(crabs.pca)
P = crabs.pca$rotation; P
Y = predict(crabs.pca); head(Y)
max(abs(Y)-abs(Y1))
colSums(P^2)
tapply(Y[,2],sex,mean)
tapply(Y[,3],sp,mean)
##-------------------------------------------------------------------------
#!change working directory!
#Data Inladen
wijn <- read.csv("wijn.csv", header=FALSE, sep = ",")
summary(wijn)
#Data schalen
wijnScaled = scale(wijn[,2:14])
##-------------------------------------------------------------------------
#geschaalde PCA maken [waarschijnlijk best aangezien geen eenheden gegeven worden]
wijnScaled.pca = prcomp(wijnScaled,scale=TRUE)
plot(wijnScaled.pca)
summary(wijnScaled.pca)
scaledRot = wijnScaled.pca$rotation
scaledPred = predict(wijnScaled.pca)
View(wijn)
View(scaledRot)
View(scaledRot)
